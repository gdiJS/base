unit exceptions;

interface

uses
windows,
sysutils;

type
  REArguments = array[0..100] of DWORD;
  PREArguments = ^REArguments;
  TExceptionProc = procedure(dwExceptionCode, dwExceptionFlags, nNumberOfArguments: DWORD; lpArguments: PREArguments); stdcall;

procedure HandleFatalException(dwExceptionCode, dwExceptionFlags, nNumberOfArguments: DWORD; lpArguments: PREArguments); stdcall;
procedure Log(const sMsg: string);

implementation

procedure HandleFatalException(dwExceptionCode, dwExceptionFlags, nNumberOfArguments: DWORD; lpArguments: PREArguments); stdcall;
var
  msg: string;
begin
  msg := 'Brutal Error: ' + inttostr(dwExceptionCode) + ' - ' + IntToStr(dwExceptionFlags);
  Log(msg);
end;


procedure Log(const sMsg: string);
var
  fLog: TextFile;
const
  sLogFile = 'app.log';
begin
  AssignFile(fLog, sLogFile);
  if FileExists(sLogFile) then
    Append(fLog)
  else
    Rewrite(fLog);
  Append(fLog);
  try
    WriteLn(fLog, sMsg);
  finally
    CloseFile(fLog);
  end;
end;


end.
